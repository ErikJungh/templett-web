{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AnimateDivDirective {\n  constructor(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n  }\n  ngOnInit() {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.2\n    };\n    this.intersectionObserver = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          console.log(\"intersection\");\n          this.animateElement();\n          this.intersectionObserver.unobserve(this.elementRef.nativeElement);\n        }\n      });\n    }, options);\n    this.intersectionObserver.observe(this.elementRef.nativeElement);\n  }\n  ngOnDestroy() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n  }\n  animateElement() {\n    // Add your animation class here\n    this.renderer.addClass(this.elementRef.nativeElement, \"animate-div\");\n  }\n  static #_ = this.ɵfac = function AnimateDivDirective_Factory(t) {\n    return new (t || AnimateDivDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AnimateDivDirective,\n    selectors: [[\"\", \"animateDivEntry\", \"\"]]\n  });\n}","map":{"version":3,"names":["AnimateDivDirective","constructor","elementRef","renderer","ngOnInit","options","root","rootMargin","threshold","intersectionObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","animateElement","unobserve","nativeElement","observe","ngOnDestroy","disconnect","addClass","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","_2","selectors"],"sources":["/Users/erikjunghahn/Documents/repos/templett-web/src/app/directives/animate-div.directive.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[animateDivEntry]\",\n})\nexport class AnimateDivDirective implements OnInit, OnDestroy {\n  private intersectionObserver!: IntersectionObserver;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.2,\n    };\n\n    this.intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          console.log(\"intersection\");\n          this.animateElement();\n          this.intersectionObserver.unobserve(this.elementRef.nativeElement);\n        }\n      });\n    }, options);\n\n    this.intersectionObserver.observe(this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n  }\n\n  private animateElement() {\n    // Add your animation class here\n    this.renderer.addClass(this.elementRef.nativeElement, \"animate-div\");\n  }\n}\n"],"mappings":";AAWA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,UAAsB,EAAUC,QAAmB;IAAnD,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;EAAc;EAE1EC,QAAQA,CAAA;IACN,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE;KACZ;IAED,IAAI,CAACC,oBAAoB,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAI;MAC/DA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAI;QACxB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3B,IAAI,CAACC,cAAc,EAAE;UACrB,IAAI,CAACR,oBAAoB,CAACS,SAAS,CAAC,IAAI,CAAChB,UAAU,CAACiB,aAAa,CAAC;;MAEtE,CAAC,CAAC;IACJ,CAAC,EAAEd,OAAO,CAAC;IAEX,IAAI,CAACI,oBAAoB,CAACW,OAAO,CAAC,IAAI,CAAClB,UAAU,CAACiB,aAAa,CAAC;EAClE;EAEAE,WAAWA,CAAA;IACT,IAAI,IAAI,CAACZ,oBAAoB,EAAE;MAC7B,IAAI,CAACA,oBAAoB,CAACa,UAAU,EAAE;;EAE1C;EAEQL,cAAcA,CAAA;IACpB;IACA,IAAI,CAACd,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAACrB,UAAU,CAACiB,aAAa,EAAE,aAAa,CAAC;EACtE;EAAC,QAAAK,CAAA,G;qBAlCUxB,mBAAmB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnB7B,mBAAmB;IAAA8B,SAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}