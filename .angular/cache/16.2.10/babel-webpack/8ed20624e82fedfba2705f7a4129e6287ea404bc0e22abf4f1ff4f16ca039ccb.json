{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AnimateIncrementDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.finalValue = 0;\n    this.animated = false;\n  }\n  ngOnInit() {\n    this.observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && !this.animated) {\n          this.animateValue(0, this.finalValue);\n          this.animated = true;\n          this.observer?.unobserve(this.elementRef.nativeElement);\n        }\n      });\n    });\n    this.observer.observe(this.elementRef.nativeElement);\n  }\n  ngOnDestroy() {\n    this.observer?.disconnect();\n  }\n  animateValue(start, end) {\n    let current = start;\n    const increment = Math.ceil(end / 100); // Adjust increment value for smoother animation\n    const interval = setInterval(() => {\n      current += increment;\n      if (current >= end) {\n        current = end;\n        clearInterval(interval);\n      }\n      this.elementRef.nativeElement.textContent = current.toString(); // Update element with the current value\n    }, 20); // Adjust the interval for desired animation speed\n  }\n  static #_ = this.ɵfac = function AnimateIncrementDirective_Factory(t) {\n    return new (t || AnimateIncrementDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AnimateIncrementDirective,\n    selectors: [[\"\", \"animateIncrement\", \"\"]],\n    inputs: {\n      finalValue: [\"animateIncrement\", \"finalValue\"]\n    }\n  });\n}","map":{"version":3,"names":["AnimateIncrementDirective","constructor","elementRef","finalValue","animated","ngOnInit","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","animateValue","unobserve","nativeElement","observe","ngOnDestroy","disconnect","start","end","current","increment","Math","ceil","interval","setInterval","clearInterval","textContent","toString","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","inputs"],"sources":["/Users/erikjunghahn/Documents/repos/templett-web/src/app/directives/animated-increment.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[animateIncrement]'\n})\nexport class AnimateIncrementDirective implements OnInit, OnDestroy {\n  @Input('animateIncrement') finalValue: number = 0;\n  private observer: IntersectionObserver | undefined;\n  private animated: boolean = false;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && !this.animated) {\n          this.animateValue(0, this.finalValue);\n          this.animated = true;\n          this.observer?.unobserve(this.elementRef.nativeElement);\n        }\n      });\n    });\n\n    this.observer.observe(this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.observer?.disconnect();\n  }\n\n  private animateValue(start: number, end: number) {\n    let current = start;\n    const increment = Math.ceil(end / 100); // Adjust increment value for smoother animation\n\n    const interval = setInterval(() => {\n      current += increment;\n      if (current >= end) {\n        current = end;\n        clearInterval(interval);\n      }\n      this.elementRef.nativeElement.textContent = current.toString(); // Update element with the current value\n    }, 20); // Adjust the interval for desired animation speed\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,yBAAyB;EAKpCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJH,KAAAC,UAAU,GAAW,CAAC;IAEzC,KAAAC,QAAQ,GAAY,KAAK;EAEY;EAE7CC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAG;MACjDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAG;QACtB,IAAIA,KAAK,CAACC,cAAc,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE;UAC1C,IAAI,CAACQ,YAAY,CAAC,CAAC,EAAE,IAAI,CAACT,UAAU,CAAC;UACrC,IAAI,CAACC,QAAQ,GAAG,IAAI;UACpB,IAAI,CAACE,QAAQ,EAAEO,SAAS,CAAC,IAAI,CAACX,UAAU,CAACY,aAAa,CAAC;;MAE3D,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACS,OAAO,CAAC,IAAI,CAACb,UAAU,CAACY,aAAa,CAAC;EACtD;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACV,QAAQ,EAAEW,UAAU,EAAE;EAC7B;EAEQL,YAAYA,CAACM,KAAa,EAAEC,GAAW;IAC7C,IAAIC,OAAO,GAAGF,KAAK;IACnB,MAAMG,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACJ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAExC,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAChCL,OAAO,IAAIC,SAAS;MACpB,IAAID,OAAO,IAAID,GAAG,EAAE;QAClBC,OAAO,GAAGD,GAAG;QACbO,aAAa,CAACF,QAAQ,CAAC;;MAEzB,IAAI,CAACtB,UAAU,CAACY,aAAa,CAACa,WAAW,GAAGP,OAAO,CAACQ,QAAQ,EAAE,CAAC,CAAC;IAClE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACV;EAAC,QAAAC,CAAA,G;qBArCU7B,yBAAyB,EAAA8B,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzBjC,yBAAyB;IAAAkC,SAAA;IAAAC,MAAA;MAAAhC,UAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}